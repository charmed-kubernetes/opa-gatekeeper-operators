version: 3
kubernetesResources:
  services:
    - name: gatekeeper-webhook-service
      labels:
        gatekeeper.sh/system: "yes"
      spec:
        ports:
        - port: 443
          targetPort: 8443
        selector:
          control-plane: controller-manager
          gatekeeper.sh/operation: webhook
          gatekeeper.sh/system: "yes"
  pod:
    labels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
  customResourceDefinitions:
    {% for crd in crds %}
    - name: {{crd.name}}
      spec:
        {{crd.spec|indent(8)}}
    {% endfor %}
  validatingWebhookConfigurations:
  - name: gatekeeper-validating-webhook-configuration
    labels:
      gatekeeper.sh/system: "yes"
    webhooks:
      - clientConfig:
            caBundle: Cg==
            service:
              name: gatekeeper-webhook-service
              namespace: {{ namespace }}
              path: /v1/admit
        failurePolicy: Ignore
        name: validation.gatekeeper.sh
        namespaceSelector:
          matchExpressions:
            -
                key: admission.gatekeeper.sh/ignore
                operator: DoesNotExist
        rules:
          -
            apiGroups:
              - "*"
            apiVersions:
              - "*"
            operations:
              - CREATE
              - UPDATE
            resources:
              - "*"
        sideEffects: None
        timeoutSeconds: 3
      - clientConfig:
          caBundle: Cg==
          service:
            name: gatekeeper-webhook-service
            namespace: {{ namespace }}
            path: /v1/admitlabel
        failurePolicy: Fail
        name: check-ignore-label.gatekeeper.sh
        rules:
          -
            apiGroups:
              - ""
            apiVersions:
              - "*"
            operations:
              - CREATE
              - UPDATE
            resources:
              - namespaces
        sideEffects: None
        timeoutSeconds: 3
  secrets:
    - name: gatekeeper-webhook-server-cert
      type: Opaque
serviceAccount:
  automountServiceAccountToken: true
  roles:
    - global: false
      rules:
        - apiGroups:
            - ''
          resources:
            - events
          verbs:
            - create
            - patch
        - apiGroups:
            - ''
          resources:
            - secrets
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
    - global: true
      rules:
        - apiGroups:
            - '*'
          resources:
            - '*'
          verbs:
            - get
            - list
            - watch
        - apiGroups:
            - apiextensions.k8s.io
          resources:
            - customresourcedefinitions
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - config.gatekeeper.sh
          resources:
            - configs
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - config.gatekeeper.sh
          resources:
            - configs/status
          verbs:
            - get
            - patch
            - update
        - apiGroups:
            - constraints.gatekeeper.sh
          resources:
            - '*'
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - policy
          resourceNames:
            - gatekeeper-admin
          resources:
            - podsecuritypolicies
          verbs:
            - use
        - apiGroups:
            - status.gatekeeper.sh
          resources:
            - '*'
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - templates.gatekeeper.sh
          resources:
            - constrainttemplates
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
        - apiGroups:
            - templates.gatekeeper.sh
          resources:
            - constrainttemplates/finalizers
          verbs:
            - delete
            - get
            - patch
            - update
        - apiGroups:
            - templates.gatekeeper.sh
          resources:
            - constrainttemplates/status
          verbs:
            - get
            - patch
            - update
        - apiGroups:
            - admissionregistration.k8s.io
          resourceNames:
            - gatekeeper-validating-webhook-configuration
          resources:
            - validatingwebhookconfigurations
          verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch

containers:
  - envConfig:
      POD_NAMESPACE:
        field:
          path: metadata.namespace
          api-version: v1
      POD_NAME:
        field:
          path: metadata.name
          api-version: v1
    imageDetails: {{ image_details }}
    ports:
    - containerPort: 8443
      name: webhook-server
      protocol: TCP
    - containerPort: 8888
      name: metrics
      protocol: TCP
    - containerPort: 9090
      name: healthz
      protocol: TCP
    imagePullPolicy: {{ imagePullPolicy }}
    name: manager
    args: {{ cli_args }}
    command:
      - /manager
    kubernetes:
      livenessProbe:
        httpGet:
          path: /healthz
          port: 9090
      readinessProbe:
        httpGet:
          path: /readyz
          port: 9090
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - all
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 1000
    volumeConfig:
    - name: cert
      mountPath: /certs
      secret:
        name: gatekeeper-webhook-server-cert
